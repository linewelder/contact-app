// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250130025026_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactContactGroup", b =>
                {
                    b.Property<int>("ContactGroupsContactGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ContactsContactId")
                        .HasColumnType("int");

                    b.HasKey("ContactGroupsContactGroupId", "ContactsContactId");

                    b.HasIndex("ContactsContactId");

                    b.ToTable("ContactContactGroup");
                });

            modelBuilder.Entity("DataLayer.Model.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberContactsTargeted")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TargetGroupContactGroupId")
                        .HasColumnType("int");

                    b.HasKey("CampaignId");

                    b.HasIndex("TargetGroupContactGroupId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("DataLayer.Model.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DataLayer.Model.ContactGroup", b =>
                {
                    b.Property<int>("ContactGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactGroupId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContactGroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ContactGroups");
                });

            modelBuilder.Entity("ContactContactGroup", b =>
                {
                    b.HasOne("DataLayer.Model.ContactGroup", null)
                        .WithMany()
                        .HasForeignKey("ContactGroupsContactGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Model.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Model.Campaign", b =>
                {
                    b.HasOne("DataLayer.Model.ContactGroup", "TargetGroup")
                        .WithMany("Campaigns")
                        .HasForeignKey("TargetGroupContactGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("DataLayer.Model.ContactGroup", b =>
                {
                    b.Navigation("Campaigns");
                });
#pragma warning restore 612, 618
        }
    }
}
